version: "3"

services:
    php73:
        build:
            context: .
            dockerfile: Dockerfile.php73
        image: php73:1.0.0
        container_name: php73
        volumes:
            - php_data:/var/www/html
    php70:
        build:
            context: .
            dockerfile: Dockerfile.php70
        image: php70:1.0.0
        container_name: php70
        volumes:
            - php_data:/var/www/html
        ports:
            - 9000:80
    nodejs10:
        build:
            context: .
            dockerfile: Dockerfile.nodejs
        image: nodejs:1.0.0
        container_name: nodejs10
        volumes:
            - nodejs_data:/app
    nodejs-latest:
        build:
            context: .
            dockerfile: Dockerfile.nodejs-latest
        image: nodejs:1.0.0
        container_name: nodejs-latest
        volumes:
            - nodejs_data:/app
    golang:
        build:
            context: .
            dockerfile: Dockerfile.golang
        image: golang:1.0.0
        container_name: golang
        security_opt:
            - seccomp:unconfined
        volumes: 
            - golang_data:/app
    ruby:
        build:
            context: .
            dockerfile: Dockerfile.ruby
        image: ruby:1.0.0
        container_name: ruby
        volumes: 
            - ruby_data:/app
    dotnet:
        build:
            context: .
            dockerfile: Dockerfile.dotnet
        image: dotnet:1.0.0
        container_name: dotnet
        volumes:
            - dotnet_data:/app
    mongodb:
        image: docker.io/bitnami/mongodb:5.0
        container_name: mongodb
        environment:
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_ADVERTISED_HOSTNAME=mongodb
            - ALLOW_EMPTY_PASSWORD=yes
        ports:
            - 27017:27017
        volumes:
            - mongodb_data:/bitnami/mongodb
    postgresql:
        image: docker.io/bitnami/postgresql:14
        container_name: postgresql
        environment:
            - POSTGRESQL_USERNAME=postgresql
            - POSTGRESQL_PASSWORD=postgresql
            - POSTGRESQL_DATABASE=public
        ports:
            - 5432:5432
        volumes:
            - postgresql_data:/bitnami/postgresql
    redis:
        image: docker.io/bitnami/redis:4.0
        container_name: redis
        environment: 
            - ALLOW_EMPTY_PASSWORD=yes
            - REDIS_AOF_ENABLED=no
        ports:
            - 6379:6379
    mariadb:
        image: docker.io/bitnami/mariadb:10.6.8
        container_name: mariadb
        environment:
            - MARIADB_ROOT_USER=root
            - MARIADB_ROOT_PASSWORD=mariadb
            - MARIADB_DATABASE=default
            - MARIADB_SKIP_TEST_DB=yes
        ports:
            - 3306:3306
        volumes:
            - mariadb_data:/bitnami/mariadb
    deskdev:
        build:
            context: .
            dockerfile: Dockerfile.deskdev
        image: deskdev:1.0.0
        container_name: deskdev
        environment:
            - DISPLAY=:0
            - WAYLAND_DISPLAY=:0
            - XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir
            - PULSE_SERVER=/mnt/wslg/PulseServer
        volumes:
            - deskdev_data:/app
            - /tmp/.X11-unix:/tmp/.X11-unix
            - /mnt/wslg:/mnt/wslg
    localstack:
        image: docker.io/localstack/localstack:0.14.3
        container_name: localstack
        environment:
            - LOCALSTACK_DATA_DIR=/data
            - LOCALSTACK_SERVICES=s3
        ports:
            - 4566:4566
            - 4510-4559:4510-4559
        volumes:
            - localstack_data:/data
    zookeeper:
        image: docker.io/bitnami/zookeeper:3.8
        container_name: zookeeper
        ports:
            - 2181:2181
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        volumes:
            - zookeeper_data:/bitnami/zookeeper
    kafka:
        image: docker.io/bitnami/kafka:3.2
        container_name: kafka
        environment:
            - KAFKA_BROKER_ID=1
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
        ports:
            - 9092:9092
            - 9093:9093
        depends_on:
            - zookeeper
    kafka-ui:
        image: docker.io/provectuslabs/kafka-ui:v0.4.0
        container_name: kafka-ui
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
            - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
        ports:
            - 9000:8080
        depends_on:
            - kafka
            - zookeeper

volumes:
    php_data:
    nodejs_data:
    golang_data:
    ruby_data:
    dotnet_data:
    mongodb_data:
    postgresql_data:
    mariadb_data:
    deskdev_data:
    localstack_data:
    zookeeper_data:
